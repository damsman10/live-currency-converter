HTML
------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Currency Converter App</title>
</head>
<body>
    <div class="welcome-screen" id="welcomeScreen">
        <div class="container">
            <div class="logo">
                <img src="./Curr_logo.png" alt="">
            </div>

        
        </div>
            <footer>
                <button id="skip">skip....</button>
                
                <p id="countdown"></p>
            </footer>
    </div>






    <div class="converter">
        
        <header>
            <div class="logo" style="text-align: center;">
                <a href="./index.html"><img src="./Curr_logo.png" alt="logo" height="80px" style="padding-top: 10px;"></a>
            </div>
            <div class="curve"></div>

        </header>

        <div class="convert1">
            <p>From</p>
                    
            <div class="select-div">
                <select name="" id="currencies-from">
                        <option value="one">Currency</option>
                    
                </select>    

                <input type="number" id="amount">  
                
            </div>

                
            

            <p>To</p>

            <div class="select-div">
                <select name="" id="currencies-to">
                    <option value="one">Currency</option>
                    
                </select>    

                
            </div>

            <div>
                <button onclick="compute()">CONVERT</button>
            </div>
            

            <input id="result-screen" readonly> 

            <div class="pre-container" style="font-weight: bold;">
                <pre id="last-update"></pre>
                <pre id="next-update"></pre>
            </div>

            <div class="footer" style="position: relative; top: 5rem; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS';">
                <button id="docu-button" style="color: #0998ae; background-color: transparent;">Documentation</button>
            </div>
            

        </div>


       
        
    </div>



    <div class="desktop-mode">
        
    </div>



    <script src="./script.js"></script>
</body>
</html>



----------------------------------------------------------------------
CSS
-------------------------------------------------------------------------------
* {
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    /* background-image: repeating-linear-gradient(#17707e, #10b4ce); */
}

.welcome-screen {
    background-image: repeating-linear-gradient(#17707e, #10b4ce);
    display: none;
    
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 80vh;
    
    margin: auto;
    
}

footer {
    color: #fff;
    padding: 10px;
    font-size: 1.2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 20vh;


    button {
        font-size: 1.2rem;
        font-weight: bold;
        background-color: transparent;
        border: none;
        color: #fff;
        font-style: italic;
    }

    p {
        margin-right: 10px;
        font-size: 1.5rem;
        font-weight: bold;
        /* font-family: 'BonaNovaSC-Regular'; */
    }
}

/* --------------------------------- */

.converter {
    max-width: 600px;
    background-color: #17707e;
    margin: auto;
}

header {
    height: 40vh;
    background-color: #0998ae;

    .curve {
        width: 100%;
        height: 10rem;
        position: relative;
        top: 9rem;
        border-radius: 20rem /5rem;
        background-color: #0998ae;
    }
}

.convert1, .documentation {
    text-align: center;
    padding: 10px;
    margin-bottom: 3rem;
    position: absolute;
    border: none;
    width: 90%;
    max-width: 40rem;
    height: 35rem;
    left: 5%;
    top: 6rem;
    background-color: #fff;
    box-shadow: 2px 1px 15px rgb(151, 148, 148);
    border-radius: 10px 10px 0 0;


    p {
        font-size: 1.2rem;
        font-weight: bold;
        margin: 0;
        margin: 25px 0 10px 0;
        color: #0998ae;
    }

    .select-div select {
        margin: 0;
        margin-top: 1.2rem;
    }

    input{
        height: 3rem;
        font-size: 1.4rem;
        width: 7rem;
        border: none;
        border-radius: 5px;
        border-style: groove;
        padding-left: 10px;
        padding-bottom: 3px;

        
    }

    #result-screen {
        width: 12rem;
        box-shadow: inset 2px 2px #0998ae;
        border: none;
        background-color: #dfdfdf;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS';
    }

    h2 {
        text-align: center;
    }

    select {
        height: 3rem;
        width: 45%;
        /* margin: 1.8rem 5rem 1.8rem 0; */
        text-align: center;
        border-radius: 5px;
        font-size: 1rem;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS';
        background-color: #f9f9f9;

        option {
            font-size: 1.2rem;
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS';
            padding: 2rem;
        }
    }

    div button {
        padding: 12px 20px;
        font-size: 1.3rem;
        background-color: #0998ae;
        margin: 2rem 0;
        border: none;
        border-radius: 10px;
        color: #fff;
        cursor: pointer;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS';
    }

    .pre-container {
        margin-top: 3rem;

        pre {
            text-wrap: wrap;
            color: #02343b;
        }
    }

}



@media screen and (min-width: 601px) {
    body {
        background-color: rgb(187, 233, 231);
    }
    .welcome-screen {
        display: none;
    }
    .converter {
        /* display: none; */
        position: relative;
    }
}




@media screen and (max-width: 600px) {
    /* body { */
        /* (#0998ae); Official color */
        /* background-image: repeating-linear-gradient(#17707e, #10b4ce); */
    /* } */

    .welcome-screen {
        background-image: repeating-linear-gradient(#17707e, #10b4ce);
        display: block;
    }

    .converter {
        display: none;
    }

    .grp1 
    {
        flex-direction: column;
        
    }

}


-------------------------------------------------------------------
JS
---------------------------------------------------------------------------
const skip = document.getElementById('skip');
const welcomeScreen = document.getElementById('welcomeScreen');
const converter = document.querySelector('.converter');

//get the p for countdown
const countdownP = document.getElementById('countdown');
const currencyFromParent = document.getElementById('currencies-from');
const currencyToParent = document.getElementById('currencies-to');




//call the result screen and input amount
const result = document.getElementById('result-screen')
const amount = document.getElementById('amount')

skip.addEventListener('click', () => {
    welcomeScreen.style.display = "none";
    converter.style.display = "block";
});


// Countdown timer
let i = 3;

function countdown() {
    if (i > 0) {
        countdownP.innerHTML = i;
        i--;
    } else {
        welcomeScreen.style.display = "none";
        converter.style.display = "block";

        clearInterval(intervalid); //stop the interval when countdown is down
    }

}

const intervalid = setInterval(countdown, 1000);

let conversionRatesObject = {};
let selectedOption1 = 'USD';
let selectedOption2 = 'USD';




async function fetchExchangeRate() {

    try {
        const response = await fetch("https://v6.exchangerate-api.com/v6/6cf0e9cb14b177df0268f825/latest/USD");

        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const data = await response.json();

        conversionRatesObject = data.conversion_rates;
        document.getElementById('last-update').innerText = `Last Update Time: ${data.time_last_update_utc}`;
        document.getElementById('next-update').innerText = `Next Update Time: ${data.time_next_update_utc}`;

        populateDropdowns (conversionRatesObject);

        // document.getElementById('apiData').innerHTML = JSON.stringify(object.keys(conversion_rates), null, 2);
    } catch (error) {
        console.error('Error fetching the Exchange Rate data: ', error)
    }

}


function populateDropdowns(conversionRatesObject){


    //Now I need the keys of the object as options for my select element
    //so lets use the object constructor
    const objectKeys = Object.keys(conversionRatesObject);
    

    //loop through each key
    for (const key of objectKeys) {

        const optionFrom = document.createElement('option');
        const optionTo = document.createElement('option');

        optionFrom.value = key;
        optionFrom.textContent = key;
        optionTo.value = key;
        optionTo.textContent = key;

        currencyFromParent.appendChild(optionFrom);
        currencyToParent.appendChild(optionTo);


    }


    
    currencyFromParent.addEventListener('change', (event) => {
        selectedOption1 = event.target.value;
        // compute();
    })
    currencyToParent.addEventListener('change', (event) => {
        selectedOption2 = event.target.value;
        // compute();
    })
    
    

}

function compute() {


    // const objectEntries = Object.entries(conversionRatesObject)

    const rateFrom = conversionRatesObject[selectedOption1];
    const rateTo = conversionRatesObject[selectedOption2];

    
    // alert (rateFrom);
    // alert (rateTo);


    if (amount.value === "" || isNaN(amount.value)) {
        throw new Error ("Not a Number");
    }

    const conversionRate = (rateTo * parseFloat(amount.value))  / rateFrom;
    result.value = conversionRate;
    
    
    // document.getElementById('conversion-rate').innerText = `1 ${selectedOption1} = ${conversionRate.toFixed(4)} ${selectedOption2}`;  
          
          

}



countdown();
fetchExchangeRate();

